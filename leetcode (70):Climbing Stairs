题目：You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.


Example 1:

Input: 2
Output:  2
Explanation:  There are two ways to climb to the top.

1. 1 step + 1 step
2. 2 steps
Example 2:

Input: 3
Output:  3
Explanation:  There are three ways to climb to the top.

1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

解决方案一(Runtime: 49 ms)可在jupyter中直接运行：
def climbStairs(n):
    if n<=0:
        return 0
    if n==1:
        return 1
    a=1
    b=2
    for i in range(2,n):
        b=a+b
        a=b-a
    return b


if __name__=="__main__":
    print climbStairs(10)
    print climbStairs(1)
    print climbStairs(2)
    
  解决方案二(Runtime: 48 ms)：
  class Solution:
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        a = b = 1
        for _ in range(n):
            a, b = b, a + b
        return a
  
