题目：Given an array and a value, remove all instances of that value in-place and return the new length.

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

The order of elements can be changed. It doesn't matter what you leave beyond the new length.

Example:

Given nums = [3,2,2,3], val = 3,

Your function should return length = 2, with the first two elements of nums being 2.

大牛的解决方案如下：
Starting from the left every time we find a value that is the target value we swap it out with an item starting from the right.
We decrement end each time as we know that the final item is the target value and only increment start once we know the value is ok.
Once start reaches end we know all items after that point are the target value so we can stop there.

  def removeElement(self, nums, val):
    start, end = 0, len(nums) - 1
    while start <= end:
        if nums[start] == val:
            nums[start], nums[end], end = nums[end], nums[start], end - 1
        else:
            start +=1
    return start
